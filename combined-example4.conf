input {
  http {
    port => 5000
    codec => json
    type => "rtmplivestats"
  }
  http {
    port => 5002
   codec => json
   type => "rtmpdataclients"
  }
  http {
    port => 5003
   codec => json
   type => "audienceVoD"
  }
  http {
    port => 5004
   codec => json
   type => "userTracking"
  }
  udp {
    port => 5005
    type=>adobelog
  }
  udp {
    port => 5006
    codec => plain {charset => "ISO-8859-1"}
    type=>apache
  }
}

filter {

if [type] == "rtmplivestats"{
    mutate{
      remove_field => ["headers"]
      convert => { 
        "nclients" => "integer"
        "anchoBanda[Mbs]"=>"float"
      }
    }
  }


  if [type] == "rtmpdataclients"{
    mutate{
      remove_field => ["headers"]
      convert => { 
        "timeonline[min]" => "integer"
      }
    }
  }

  if [type] == "userTracking"{
  }

  if [type] == "audienceVoD"{
    mutate{
      remove_field => ["headers"]
      convert => { 
        "video.idVideo" => "integer"
      }
    }
  }


  if [type] == "apache"{
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    if " LIVE_portatil" in [message] {
      mutate {add_tag => ["rtmp,portatil"]}
    }
    else if " id= " in [message]{
      mutate {add_tag => ["myers"]}
    }
    else{
      mutate {add_tag => ["others"]}
    }

    if "Safari" in [message]{
      if "Chrome" in [message]{
        mutate{add_field => ["browser","Chrome"]}
      }
      else{
        mutate{add_field => ["browser","Safari"]}
      }
    }
    else if "Firefox" in [message]{
      mutate{add_field => ["browser","Firefox"]}
    }
    else if "MSIE" in [message]{
      mutate{add_field => ["browser","Explorer"]}
    }
    else if "OP" in [message]{
      mutate{add_field => ["browser","Opera"]}
    }
    else{
      mutate{add_field => ["browser","others"]}
    }
  }


  if [type] == "adobelog"{
    grok {
      patterns_dir => ["../patterns.grok"]
      match => { "message" => "%{ADOBELOG}" }
    }
    mutate{
      convert => { 
        "eventduration" => "integer"
        "spid" => "integer"
        "cpuload" => "integer"
        "memoryusage" => "integer"
        "scBytes" => "integer"
      }
    }
  }

  geoip {
      source => "ipclient"
      database =>"/etc/logstash/GeoLiteCity.dat"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
  }

  date{
      match => ["timestamp", "YYYY-MM-dd HH:mm:ss","dd/MMM/yyyy:HH:mm:ss Z"]
      timezone => "Europe/Madrid"
      target => "@timestamp"
    }
}

output {
  if [type] == "adobelog"{
    if [clientstate] == "play"{
    elasticsearch {
        hosts => ["1.1.1.1:9200"]
        index => "logstash-%{+YYYY.MM}"
      }
      }
    }
    else if "others" in [tags] {
    }
    else{
      elasticsearch {
        hosts => ["1.1.1.1:9200"]
        index => "logstash-%{+YYYY.MM}"
      }
    }
}